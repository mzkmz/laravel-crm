#!/usr/bin/env php
<?php
/* (c) Anton Medvedev <anton@medv.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

define('__ROOT__', realpath(__DIR__ . '/..'));
chdir(__ROOT__);

$opt = getopt('', ['nozip']);

`composer install --no-dev`;

$pharName = "deployer.phar";
$pharFile = __ROOT__ . '/' . $pharName;
if (file_exists($pharFile)) {
    unlink($pharFile);
}

$phar = new \Phar($pharFile, 0, $pharName);
$phar->setSignatureAlgorithm(\Phar::SHA1);
$phar->startBuffering();
$iterator = new RecursiveDirectoryIterator(__ROOT__, FilesystemIterator::SKIP_DOTS);
$iterator = new RecursiveCallbackFilterIterator($iterator, function (SplFileInfo $fileInfo) {
    return !in_array($fileInfo->getBasename(), ['.git', 'Tests', 'test'], true);
});
$iterator = new RecursiveIteratorIterator($iterator);
$iterator = new CallbackFilterIterator($iterator, function (SplFileInfo $fileInfo) {
    return in_array($fileInfo->getExtension(), ['php', 'exe'], true);
});

foreach ($iterator as $fileInfo) {
    $file = str_replace(__ROOT__, '', $fileInfo->getRealPath());
    echo "Add file: " . $file . "\n";
    $phar->addFile($fileInfo->getRealPath(), $file);

    if (!array_key_exists('nozip', $opt)) {
        $phar[$file]->compress(Phar::GZ);
    
        if (!$phar[$file]->isCompressed()) {
            echo "Could not compress File: {$file}\n";
        }
    }
}

// Add bin/dep file
$depContent = file_get_contents(__ROOT__ . '/bin/dep');
$depContent = str_replace("#!/usr/bin/env php\n", '', $depContent);
$depContent = str_replace('__FILE__', 'str_replace("phar://", "", Phar::running())', $depContent);
$phar->addFromString('bin/dep', $depContent);
$phar->setStub(<<<STUB
#!/usr/bin/env php
<?php
Phar::mapPhar('{$pharName}');
require 'phar://{$pharName}/bin/dep';
__HALT_COMPILER();
STUB);
$phar->stopBuffering();
unset($phar);

echo "$pharName was created successfully.\n";
